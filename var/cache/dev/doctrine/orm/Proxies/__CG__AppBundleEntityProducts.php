<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Products extends \AppBundle\Entity\Products implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'addTime', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'subCategoryId', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'cart', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'orderedProducts', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'subCategory', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'quantity', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'supplyProducts', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'addedQuantity'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'addTime', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'subCategoryId', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'cart', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'orderedProducts', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'subCategory', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'quantity', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'supplyProducts', '' . "\0" . 'AppBundle\\Entity\\Products' . "\0" . 'addedQuantity'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Products $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddTime($addTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddTime', [$addTime]);

        return parent::setAddTime($addTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddTime', []);

        return parent::getAddTime();
    }

    /**
     * {@inheritDoc}
     */
    public function addCart(\AppBundle\Entity\Cart $cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCart', [$cart]);

        return parent::addCart($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCart(\AppBundle\Entity\Cart $cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCart', [$cart]);

        return parent::removeCart($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function getCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCart', []);

        return parent::getCart();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderedProduct(\AppBundle\Entity\OrderedProducts $orderedProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderedProduct', [$orderedProduct]);

        return parent::addOrderedProduct($orderedProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderedProduct(\AppBundle\Entity\OrderedProducts $orderedProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderedProduct', [$orderedProduct]);

        return parent::removeOrderedProduct($orderedProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderedProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderedProducts', []);

        return parent::getOrderedProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubCategoryId($subCategoryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubCategoryId', [$subCategoryId]);

        return parent::setSubCategoryId($subCategoryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategoryId', []);

        return parent::getSubCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubCategory(\AppBundle\Entity\SubCategory $subCategory = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubCategory', [$subCategory]);

        return parent::setSubCategory($subCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategory', []);

        return parent::getSubCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupplyProduct(\AppBundle\Entity\SupplyProducts $supplyProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupplyProduct', [$supplyProduct]);

        return parent::addSupplyProduct($supplyProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupplyProduct(\AppBundle\Entity\SupplyProducts $supplyProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupplyProduct', [$supplyProduct]);

        return parent::removeSupplyProduct($supplyProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplyProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplyProducts', []);

        return parent::getSupplyProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddedQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddedQuantity', []);

        return parent::getAddedQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddedQuantity($addedQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddedQuantity', [$addedQuantity]);

        return parent::setAddedQuantity($addedQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function updateQuantity($quantity, $addedQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateQuantity', [$quantity, $addedQuantity]);

        return parent::updateQuantity($quantity, $addedQuantity);
    }

}
